{"version":3,"sources":["components/Navigation/Navigation.tsx","App.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeopleLink/PeopleLink.tsx","components/PeoplePage/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["getNavClass","isActive","classNames","Navigation","className","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleLink","person","slug","sex","name","PeopleTable","people","useParams","getFindPerson","find","currentPerson","useEffect","selectedPerson","document","querySelector","scrollIntoView","block","behavior","window","scrollTo","top","getParent","parent","personParent","map","mother","motherName","undefined","father","fatherName","born","died","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","catch","finally","length","ErrorPage","Root","path","element","index","replace","container","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.393fc4b6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst getNavClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"Nav\"\n    className=\"\n      navbar\n      is-light\n      is-fixed-top\n      is-mobile\n      has-shadow\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink to=\"/\" className={getNavClass}>\n          Home\n        </NavLink>\n\n        <NavLink to=\"/people\" className={getNavClass}>\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">\n    Home page\n  </h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import React, { useEffect } from 'react';\n\nimport classNames from 'classnames';\n\nimport { useParams } from 'react-router-dom';\nimport { PeopleLink } from '../PeopleLink/PeopleLink';\n\nimport { Person } from '../../../types';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  function getFindPerson(name: string) {\n    return people.find(currentPerson => currentPerson.name === name);\n  }\n\n  useEffect(() => {\n    const selectedPerson = document.querySelector('.has-background-warning');\n\n    if (selectedPerson) {\n      selectedPerson.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    } else {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [slug]);\n\n  const getParent = (\n    parent: Person | undefined, personParent: string,\n  ) => {\n    return parent\n      ? <PeopleLink person={parent} />\n      : personParent;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = person.motherName\n            ? getFindPerson(person.motherName)\n            : undefined;\n          const father = person.fatherName\n            ? getFindPerson(person.fatherName)\n            : undefined;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PeopleLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.motherName ? getParent(mother, person.motherName) : '-'}\n              </td>\n\n              <td>\n                {person.fatherName ? getParent(father, person.fatherName) : '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        People Page\n      </h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {isError ? (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              ) : (\n                <>\n                  {people.length ? (\n                    <PeopleTable people={people} />\n                  ) : (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './ErrorPage.scss';\n\nexport const ErrorPage: React.FC = () => (\n  <section className=\"error-page\">\n    <div className=\"container\">\n      <div className=\"error-page__content\">\n        <div className=\"error-page--bg\">\n          <h1 className=\"title\">\n            Page not found\n          </h1>\n\n        </div>\n\n        <div className=\"error-page__description\">\n          <h3 className=\"label\">\n            {'Look like you\\'re lost'}\n          </h3>\n\n          <p>\n            the page you are looking for not avaible!\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import {\n  HashRouter,\n  Navigate,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { ErrorPage } from './components/ErrorPage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}